// Code generated by wunderctl. DO NOT EDIT.

export interface CreateMessageInput {
	content: string;
	userId: string;
	timestamp: string;
}

export interface UserIDByEmailInput {
	emailId: string;
}

export type JSONValue = string | number | boolean | JSONObject | Array<JSONValue>;

export type JSONObject = { [key: string]: JSONValue };

export interface GraphQLError {
	message: string;
	path?: ReadonlyArray<string | number>;
}

export interface InternalAllSessionsInput {
	userId: string;
}

export interface InternalCreateMessageInput {
	content: string;
	userId: string;
	timestamp: string;
}

export interface InternalUserIDByEmailInput {
	emailId: string;
}

export interface InjectedAllSessionsInput {
	userId: string;
}

export interface InjectedCreateMessageInput {
	content: string;
	userId: string;
	timestamp: string;
}

export interface InjectedUserIDByEmailInput {
	emailId: string;
}

export interface AllMessagesResponse {
	data?: AllMessagesResponseData;
	errors?: ReadonlyArray<GraphQLError>;
}

export interface AllSessionsResponse {
	data?: AllSessionsResponseData;
	errors?: ReadonlyArray<GraphQLError>;
}

export interface CreateMessageResponse {
	data?: CreateMessageResponseData;
	errors?: ReadonlyArray<GraphQLError>;
}

export interface UserIDByEmailResponse {
	data?: UserIDByEmailResponseData;
	errors?: ReadonlyArray<GraphQLError>;
}

export interface AllMessagesResponseData {
	db_allMessages: {
		data: {
			content: string;
			timestamp: string;
			user: {
				_id: string;
				name: string;
				email: string;
				image: string;
			};
		}[];
	};
}

export interface AllSessionsResponseData {
	db_allSessions: {
		data: {
			userId: string;
			user: {
				name: string;
				email: string;
				image: string;
			};
		}[];
	};
}

export interface CreateMessageResponseData {
	db_createChat: {
		_id: string;
	};
}

export interface UserIDByEmailResponseData {
	db_userIDByEmail: string;
}
